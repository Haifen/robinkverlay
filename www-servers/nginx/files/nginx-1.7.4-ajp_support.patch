diff --git a/src/core/ngx_config.h b/src/core/ngx_config.h
index 1da71f8..f83e86a 100644
--- a/src/core/ngx_config.h
+++ b/src/core/ngx_config.h
@@ -11,6 +11,7 @@
 
 #include <ngx_auto_headers.h>
 
+#include <nginx.h>
 
 #if defined __DragonFly__ && !defined __FreeBSD__
 #define __FreeBSD__        4
diff --git a/src/event/ngx_event_pipe.c b/src/event/ngx_event_pipe.c
index eed807d..5d36f9f 100644
--- a/src/event/ngx_event_pipe.c
+++ b/src/event/ngx_event_pipe.c
@@ -314,6 +314,9 @@ ngx_event_pipe_read_upstream(ngx_event_pipe_t *p)
             if (n >= size) {
                 cl->buf->last = cl->buf->end;
 
+#if (nginx_version) < 1001004 
+                n -= size;
+#else
                 /* STUB */ cl->buf->num = p->num++;
 
                 if (p->input_filter(p, cl->buf) == NGX_ERROR) {
@@ -324,11 +327,29 @@ ngx_event_pipe_read_upstream(ngx_event_pipe_t *p)
                 ln = cl;
                 cl = cl->next;
                 ngx_free_chain(p->pool, ln);
+#endif
 
             } else {
                 cl->buf->last += n;
                 n = 0;
+#if (nginx_version) < 1001004 
+                if(!p->keepalive) {
+                    continue;
+                }
+#endif
+            }
+
+#if (nginx_version) < 1001004 
+            /* STUB */ cl->buf->num = p->num++;
+
+            if (p->input_filter(p, cl->buf) == NGX_ERROR) {
+                return NGX_ABORT;
             }
+
+            ln = cl;
+            cl = cl->next;
+            ngx_free_chain(p->pool, ln);
+#endif
         }
 
         if (cl) {
diff --git a/src/http/ngx_http_upstream.c b/src/http/ngx_http_upstream.c
index c7c87e0..8b6d3f6 100644
--- a/src/http/ngx_http_upstream.c
+++ b/src/http/ngx_http_upstream.c
@@ -4791,8 +4791,6 @@ ngx_http_upstream(ngx_conf_t *cf, ngx_command_t *cmd, void *dummy)
                                          |NGX_HTTP_UPSTREAM_WEIGHT
                                          |NGX_HTTP_UPSTREAM_MAX_FAILS
                                          |NGX_HTTP_UPSTREAM_FAIL_TIMEOUT
-                                         |NGX_HTTP_UPSTREAM_SRUN_ID
-                                         |NGX_HTTP_UPSTREAM_MAX_BUSY
                                          |NGX_HTTP_UPSTREAM_DOWN
                                          |NGX_HTTP_UPSTREAM_BACKUP);
     if (uscf == NULL) {
@@ -4884,9 +4882,9 @@ ngx_http_upstream_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     ngx_http_upstream_srv_conf_t  *uscf = conf;
 
     time_t                       fail_timeout;
-    ngx_str_t                   *value, s, id;
+    ngx_str_t                   *value, s;
     ngx_url_t                    u;
-    ngx_int_t                    weight, max_fails, max_busy;
+    ngx_int_t                    weight, max_fails;
     ngx_uint_t                   i;
     ngx_http_upstream_server_t  *us;
 
@@ -4923,10 +4921,7 @@ ngx_http_upstream_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 
     weight = 1;
     max_fails = 1;
-    max_busy = 0;
     fail_timeout = 10;
-    id.data = (u_char *) "a";
-    id.len = sizeof("a") - 1;
 
     for (i = 2; i < cf->args->nelts; i++) {
 
@@ -4960,21 +4955,6 @@ ngx_http_upstream_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
             continue;
         }
 
-        if (ngx_strncmp(value[i].data, "max_busy=", 9) == 0) {
-
-            if (!(uscf->flags & NGX_HTTP_UPSTREAM_MAX_BUSY)) {
-                goto invalid;
-            }
-
-            max_busy = ngx_atoi(&value[i].data[9], value[i].len - 9);
-
-            if (max_busy == NGX_ERROR) {
-                goto invalid;
-            }
-
-            continue;
-        }
-
         if (ngx_strncmp(value[i].data, "fail_timeout=", 13) == 0) {
 
             if (!(uscf->flags & NGX_HTTP_UPSTREAM_FAIL_TIMEOUT)) {
@@ -4993,22 +4973,6 @@ ngx_http_upstream_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
             continue;
         }
 
-        if (ngx_strncmp(value[i].data, "srun_id=", 8) == 0) {
-
-            if (!(uscf->flags & NGX_HTTP_UPSTREAM_SRUN_ID)) {
-                goto invalid;
-            }
-
-            id.len = value[i].len - 8;
-            id.data = &value[i].data[8];
-
-            if (id.len == 0) {
-                goto invalid;
-            }
-
-            continue;
-        }
-
         if (ngx_strcmp(value[i].data, "backup") == 0) {
 
             if (!(uscf->flags & NGX_HTTP_UPSTREAM_BACKUP)) {
@@ -5039,9 +5003,7 @@ ngx_http_upstream_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     us->naddrs = u.naddrs;
     us->weight = weight;
     us->max_fails = max_fails;
-    us->max_busy = max_busy;
     us->fail_timeout = fail_timeout;
-    us->srun_id = id;
 
     return NGX_CONF_OK;
 
diff --git a/src/http/ngx_http_upstream.h b/src/http/ngx_http_upstream.h
index 6d1425c..3128cce 100644
--- a/src/http/ngx_http_upstream.h
+++ b/src/http/ngx_http_upstream.h
@@ -93,8 +93,6 @@ typedef struct {
     ngx_uint_t                       weight;
     ngx_uint_t                       max_fails;
     time_t                           fail_timeout;
-    ngx_uint_t                       max_busy;
-    ngx_str_t                        srun_id;
 
     unsigned                         down:1;
     unsigned                         backup:1;
@@ -107,8 +105,6 @@ typedef struct {
 #define NGX_HTTP_UPSTREAM_FAIL_TIMEOUT  0x0008
 #define NGX_HTTP_UPSTREAM_DOWN          0x0010
 #define NGX_HTTP_UPSTREAM_BACKUP        0x0020
-#define NGX_HTTP_UPSTREAM_SRUN_ID       0x0040
-#define NGX_HTTP_UPSTREAM_MAX_BUSY      0x0080
 
 
 struct ngx_http_upstream_srv_conf_s {
